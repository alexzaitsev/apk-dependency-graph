<project xmlns:ivy="antlib:org.apache.ivy.ant"
        name="apk-dependency-graph" basedir="." default="main">

    <property name="src.dir"             value="src/main/java"/>
    <property name="test.dir"            value="src/test/java"/>
    <property name="build.dir"           value="build"/>
    <property name="classes.dir"         value="${build.dir}/classes"/>
    <property name="jar.dir"             value="${build.dir}/jar"/>
    <property name="testclasses.dir"     value="${build.dir}/test-classes"/>
    <property name="lib.dir"             value="lib" />
    <property name="main-class"          value="com.alex_zaitsev.adg.Main"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac
            srcdir="${src.dir}"
            destdir="${classes.dir}"
            classpathref="classpath.libraries"
            includeantruntime="false" />
    </target>

    <target name="compileTest" depends="compile" description="Compile jUnit Test cases">
        <mkdir dir="${testclasses.dir}"/>
        <javac 
            srcdir="${test.dir}" 
            destdir="${testclasses.dir}" 
            classpathref="classpath.test"
            includeantruntime="false" />
    </target>

    <target name="test" depends="compileTest">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${testclasses.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${test.dir}" includes="**/*Test*.java" />
            </batchtest>
        </junit>
    </target> 

    <target name="jar" depends="test">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
            <zipgroupfileset dir="${basedir}/">
                <include name="${lib.dir}/**/*.jar" />
                <exclude name="${lib.dir}/**/*sources.jar"/>
                <exclude name="${lib.dir}/**/*javadoc.jar"/>
            </zipgroupfileset>
        </jar>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,resolve,jar"/>

    <!-- target: resolve -->
    <property name="ivy.install.version" value="2.2.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${basedir}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/libs" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy">
        <mkdir dir="${ivy.jar.dir}"/>
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve" description="--> retreive dependencies with ivy" depends="init-ivy">
        <ivy:retrieve/>
    </target>

    <!-- path: external libraries classpath, we don't need sources and javadoc -->
    <path id="classpath.libraries">
        <fileset dir="${basedir}/">
            <include name="${lib.dir}/*.jar" />
            <exclude name="${lib.dir}/*sources.jar"/>
            <exclude name="${lib.dir}/*javadoc.jar"/>
        </fileset>
    </path>

    <!-- path: source classes for testing -->
    <path id="classpath.test">
        <pathelement location="${classes.dir}" />
        <path refid="classpath.libraries" />
    </path>
</project>
